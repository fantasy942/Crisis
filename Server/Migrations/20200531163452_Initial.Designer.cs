// <auto-generated />
using Crisis.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Crisis.Migrations
{
    [DbContext(typeof(CrisisDatabaseContext))]
    [Migration("20200531163452_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4");

            modelBuilder.Entity("Crisis.Persistence.Area", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("FactionName")
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.HasIndex("FactionName");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("Crisis.Persistence.Character", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("RankName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Ready")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RoomName")
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.HasIndex("RankName");

                    b.HasIndex("RoomName");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("Crisis.Persistence.Faction", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.HasKey("Name");

                    b.ToTable("Factions");
                });

            modelBuilder.Entity("Crisis.Persistence.Room", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FactionName")
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.HasIndex("AreaName");

                    b.HasIndex("FactionName");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Crisis.Ranks.Rank", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("FactionName")
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.HasIndex("FactionName");

                    b.ToTable("Ranks");
                });

            modelBuilder.Entity("Crisis.Persistence.Area", b =>
                {
                    b.HasOne("Crisis.Persistence.Faction", "Faction")
                        .WithMany()
                        .HasForeignKey("FactionName");
                });

            modelBuilder.Entity("Crisis.Persistence.Character", b =>
                {
                    b.HasOne("Crisis.Ranks.Rank", "Rank")
                        .WithMany()
                        .HasForeignKey("RankName");

                    b.HasOne("Crisis.Persistence.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomName");
                });

            modelBuilder.Entity("Crisis.Persistence.Room", b =>
                {
                    b.HasOne("Crisis.Persistence.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Crisis.Persistence.Faction", "Faction")
                        .WithMany()
                        .HasForeignKey("FactionName");
                });

            modelBuilder.Entity("Crisis.Ranks.Rank", b =>
                {
                    b.HasOne("Crisis.Persistence.Faction", "Faction")
                        .WithMany()
                        .HasForeignKey("FactionName");
                });
#pragma warning restore 612, 618
        }
    }
}
